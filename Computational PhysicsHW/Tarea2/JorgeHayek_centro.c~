#include <stdio.h>
#include <stdlib.h>
#include <math.h>

  double calculando(float x1, float y1,float z1,float x2, float y2,float z2){
      
    double resultado;

    double delta_x,delta_y,delta_z,potx,poty,potz, denominador, raiz, den_comp;

    delta_x=x1-x2;
    delta_y=y1-y2;
    delta_z=z1-z2;
    potx = delta_x * delta_x;
    poty = delta_y * delta_y;
    potz = delta_z * delta_z;
    denominador=potx+poty+potz;
    raiz=1/2;
    den_comp=powf(denominador,raiz);

    resultado=1/2;

    printf("%f \n",resultado);
    return resultado;
  }



//Main------------------------------------------------------------------


int main(int argc, char **argv)
{
  FILE *input;
  int num_lineas;
  int i,j,h;
  int var;

/*---------------------------------------------------------
Verifica cuales archivos fueron usados como input y se asegura de que solo haya cargado uno.
-----------------------------------------------------------*/
  printf("Este programa se ejecutó con %d argumento(s):\n",argc-1);
  for(i=1;i<argc;i++){
    printf("%s\n", argv[i]);
  }
  if(argc!=2){
    printf("se necesita solo un argumento además del nombre del ejecutable!\n EXIT!\n");
    exit(1);
    }
    else{
      printf("El archivo a usar es %s\n", argv[1]);
    }
//--------------------------------------------------------
    input=fopen(argv[1],"r");
    if(!input){
      printf("surgió un problema abriendo el archivo\n");
      exit(1);
    }
/*---------------------------------------------------------
toma como archivo base el primer argumento y cuenta sus lineas
-----------------------------------------------------------*/
    num_lineas=0;
    while ((var = fgetc(input)) != EOF){
      if (var =='\n')
	++num_lineas;
    }

    printf("Número de lineas del archivo:\n -->%d\n",num_lineas); 

/*---------------------------------------------------------
Data allocation
-----------------------------------------------------------*/ 
    float *x_axis;
    float *y_axis;
    float *z_axis;
    double *phi;
   
    x_axis = malloc(num_lineas * sizeof(float));
    y_axis = malloc(num_lineas * sizeof(float));
    z_axis = malloc(num_lineas * sizeof(float));
    phi = malloc(num_lineas * sizeof(double));

    /*   if(!x_axis||!y_axis||!z_axis){
      printf("Algo salió mal con la reserva de espacio para los arrays x, y o z\n");
      exit(1);
      }*/
/*---------------------------------------------------------
Registro de Datos en los arrays
-----------------------------------------------------------*/
    rewind(input);
    for(j=0;j<num_lineas;j++){
      fscanf(input, "%f %f %f",&x_axis[j],&y_axis[j],&z_axis[j]);


      if(!x_axis[j]||!y_axis[j]||!z_axis[j]){
	printf("Existe una linea vacia o hay un problema con la linea %d en el archivo\n",j);
	exit(1);
     } 
    }


    /*    
    for(j=0;j<num_lineas;j++){
      printf("%f %f %f\n",x_axis[j], y_axis[j], z_axis[j]);
    }
    */

    //Checkpoint 

/*---------------------------------------------------------
Calculo de potencial, filtro
-----------------------------------------------------------*/   
    printf("los valores de phi iniciales son:\n");
    for(h=0;h<num_lineas;h++){
      printf("%f ",phi[h]);
    }
    printf("\n\n Quien escribió esto aqui?\n --->");
    double pato=calculando(1.0,2.0,0.0,0.0,0.0,0.0);
    printf("\nes %f\n\n",pato);
//-------------------------------------------------------
    int k,p;
    float El_mayor=0;
    int index=-1;   


    for(k=0;k<num_lineas;k++){
      double datum=0;
      phi[k]=0;
      for(p=0;p<num_lineas;p++){
	if (p!=k){
	datum += calculando(x_axis[k],y_axis[k],z_axis[k],x_axis[p],y_axis[p],z_axis[p]);
	}}
      phi[k]=&datum;
      if(El_mayor>phi[k]){
	El_mayor=phi[k];
	index=k;
      }

/* 
    if(El_mayor==phi[k]){
	printf("Existen dos potenciales iguales\n");
      }
*/
    }	
    
  //--------------------------------------------------------

    if(index==-1){
      printf("dood, we have a problem here!, there's no minimum\n");    
    }


/*---------------------------------------------------------
Entrega de datos
-----------------------------------------------------------*/
    printf("---------------------\nLa posicion del minimo de potencial es:\n\n%f %f %f\n\n",x_axis[index], y_axis[index], z_axis[index]);


/*---------------------------------------------------------
FIN
-----------------------------------------------------------*/   
    fclose(input);

    return 0;
}
